{"version":3,"sources":["components/Panel.jsx","components/Display.jsx","components/ButtonGroup.jsx","components/Button.jsx","components/History.jsx","components/Calculator.jsx","index.js"],"names":["Container","styled","div","_templateObject","Panel","react","this","props","children","React","Display_templateObject","Display","Display_Container","data-testid","data-display","displayValue","ButtonGroup_templateObject","ButtonGroup","handleClick","e","_this","onClickButton","target","textContent","ButtonGroup_Container","onClick","Button_templateObject","p","size","Button","_this$props","_this$props$size","color","Button_Container","data-color","History_templateObject","History","History_Container","Calculator_templateObject","Box","_templateObject2","evalFunc","string","Function","Calculator","state","expression","result","key","_this$state$displayVa","_this$state$expressio","_this$state$result","lastChar","substr","length","operatorKeys","proc","AC","setState","BS","√","includes","unshift","tempValue","replace","Math","sqrt","÷","×","-","+","=",".","Number","0","_this2","Calculator_Container","components_Panel","components_Display","components_ButtonGroup","components_Button","components_History","map","element","index","ReactDOM","render","react_default","a","createElement","components_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.4fd40dda.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 10px auto;\r\n  width: 300px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nclass Panel extends React.Component {\r\n  render() {\r\n    return <Container>{this.props.children}</Container>;\r\n  }\r\n}\r\n\r\nexport default Panel;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 5px;\r\n  [data-display] {\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.2);\r\n    text-align: left;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    padding: 0 15px;\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div data-testid=\"display\" data-display>{this.props.displayValue}</div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :after {\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n  }\r\n`;\r\n\r\nclass ButtonGroup extends React.Component {\r\n  handleClick = e => {\r\n    this.props.onClickButton(e.target.textContent);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container onClick={this.handleClick}>{this.props.children}</Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonGroup;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  float: left;\r\n  width: ${p => (p.size / 4) * 100}%;\r\n  padding: 5px;\r\n  button {\r\n    :focus {\r\n      outline: none;\r\n    }\r\n    :hover {\r\n      background: #eee;\r\n    }\r\n    :active {\r\n      box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n    }\r\n    color: #000;\r\n    font-size: 20px;\r\n    line-height: 40px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    background: transparent;\r\n    border-radius: 5px;\r\n    border: 2px solid #000;\r\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.4);\r\n\r\n    &[data-color=\"gray\"] {\r\n      background: #eee;\r\n      :hover {\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Button extends React.Component {\r\n  render() {\r\n    const { size = 1, color, children } = this.props;\r\n    return (\r\n      <Container size={size}>\r\n        <button data-color={color}>{children}</button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 300px;\r\n  height: 374px;\r\n  padding: 10px;\r\n  margin: 20px auto;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  overflow-y: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  ::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n`;\r\n\r\n// TODO: Panel 을 참고해서 History component 생성 및 export\r\nclass History extends React.Component{\r\n  render() {\r\n    return (\r\n      <Container data-testid=\"history\">\r\n        {this.props.children}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default History;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Panel from \"./Panel\";\r\nimport Display from \"./Display\";\r\nimport ButtonGroup from \"./ButtonGroup\";\r\nimport Button from \"./Button\";\r\nimport History from \"./History\";\r\n\r\n\r\nconst Container = styled.div`\r\n  margin: 30px auto;\r\n  text-align: center;\r\n`;\r\n\r\n// TODO: History 내에서 수식 표시할 때 사용\r\nconst Box = styled.div`\r\n  display: inline-block;\r\n  width: 270px;\r\n  height: 65px;\r\n  padding: 10px;\r\n  border: 2px solid #000;\r\n  border-radius: 5px;\r\n  text-align: right;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  h3 {\r\n    margin: 0px;\r\n  }\r\n`;\r\n\r\nconst evalFunc = function(string) {\r\n  // eslint-disable-next-line no-new-func\r\n  return new Function(\"return (\" + string + \")\")();\r\n};\r\n\r\nclass Calculator extends React.Component {\r\n  // TODO: history 추가\r\n  state = {\r\n    displayValue: \"\",\r\n    expression: [],\r\n    result: []\r\n  };\r\n\r\n  onClickButton = key => {\r\n    let { displayValue = \"\" } = this.state;\r\n    let { expression = [] } = this.state;\r\n    let { result = [] } = this.state;\r\n    displayValue = \"\" + displayValue;\r\n    const lastChar = displayValue.substr(displayValue.length - 1);\r\n    const operatorKeys = [\"÷\", \"×\", \"-\", \"+\"];\r\n    const proc = {\r\n      AC: () => {\r\n        this.setState({ displayValue: \"\" });\r\n      },\r\n      BS: () => {\r\n        if (displayValue.length > 0) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        }\r\n        this.setState({ displayValue });\r\n      },\r\n      // TODO: 제곱근 구현\r\n      \"√\": () => {\r\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        } else if (lastChar !== \"\") {\r\n\r\n          expression.unshift(\"√(\" + displayValue + \")\");\r\n\r\n          let tempValue = displayValue.replace(/×/g,'*')\r\n          tempValue = tempValue.replace(/÷/g,'/')\r\n          displayValue = evalFunc(tempValue);\r\n          displayValue = Math.sqrt(displayValue);\r\n\r\n          result.unshift(\"\" + displayValue);\r\n        }\r\n        this.setState({ displayValue });\r\n        this.setState({ expression });\r\n        this.setState({ result });\r\n      },\r\n      // TODO: 사칙연산 구현\r\n      \"÷\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"÷\" });\r\n        }\r\n      },\r\n      \"×\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"×\" });\r\n        }\r\n      },\r\n      \"-\": () => {\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"-\" });\r\n        }\r\n      },\r\n      \"+\": () => {\r\n        // + 연산 참고하여 연산 구현\r\n        if (lastChar !== \"\" && !operatorKeys.includes(lastChar)) {\r\n          this.setState({ displayValue: displayValue + \"+\" });\r\n        }\r\n      },\r\n      \"=\": () => {\r\n        if (lastChar !== \"\" && operatorKeys.includes(lastChar)) {\r\n          displayValue = displayValue.substr(0, displayValue.length - 1);\r\n        } else if (lastChar !== \"\") {\r\n\r\n          expression.unshift(displayValue);\r\n\r\n          let tempValue = displayValue.replace(/×/g,'*');\r\n          tempValue = tempValue.replace(/÷/g,'/');\r\n          displayValue = evalFunc(tempValue);\r\n\r\n          result.unshift(displayValue);\r\n        }\r\n        this.setState({ displayValue });\r\n        this.setState({ expression });\r\n        this.setState({ result });\r\n      },\r\n      \".\": () => {\r\n        if (Number(displayValue) == 0) displayValue += \"0.\";  \r\n        //else if ()\r\n        else displayValue += \".\";\r\n\r\n        this.setState({ displayValue });\r\n      },\r\n      \"0\": () => {\r\n        if (Number(displayValue) !== 0) {\r\n          displayValue += \"0\";\r\n          this.setState({ displayValue });\r\n        }\r\n      }\r\n    };\r\n\r\n    if (proc[key]) {\r\n      proc[key]();\r\n    } else {\r\n      // 여긴 숫자\r\n      this.setState({ displayValue: displayValue + key });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Panel>\r\n          <Display displayValue={this.state.displayValue} />\r\n          <ButtonGroup onClickButton={this.onClickButton}>\r\n            <Button size={1} color=\"gray\">\r\n              AC\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              BS\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              √\r\n            </Button>\r\n            <Button size={1} color=\"gray\">\r\n              ÷\r\n            </Button>\r\n\r\n            <Button size={1}>7</Button>\r\n            <Button size={1}>8</Button>\r\n            <Button size={1}>9</Button>\r\n            <Button size={1} color=\"gray\">\r\n              ×\r\n            </Button>\r\n\r\n            <Button size={1}>4</Button>\r\n            <Button size={1}>5</Button>\r\n            <Button size={1}>6</Button>\r\n            <Button size={1} color=\"gray\">\r\n              -\r\n            </Button>\r\n\r\n            <Button size={1}>1</Button>\r\n            <Button size={1}>2</Button>\r\n            <Button size={1}>3</Button>\r\n            <Button size={1} color=\"gray\">\r\n              +\r\n            </Button>\r\n\r\n            <Button size={2}>0</Button>\r\n            <Button size={1}>.</Button>\r\n            <Button size={1} color=\"gray\">\r\n              =\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Panel>\r\n        {/* TODO: History componet를 이용해 map 함수와 Box styled div를 이용해 history 표시 */}\r\n        <History>{\r\n          this.state.result.map((element,index) => {\r\n            return(\r\n              <Box onClick={() => {\r\n                  this.setState({ displayValue : this.state.expression[index]});\r\n                }\r\n              }>\r\n                <div>{this.state.expression[index]}</div>\r\n                <div>{'= ' + element}</div>\r\n              </Box>\r\n            );\r\n          }) \r\n        }</History>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport Calculator from \"./components/Calculator\";\r\n\r\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}